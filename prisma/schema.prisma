// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                @id @default(autoincrement())
  createdAt           DateTime           @default(now())
  email               String             @unique
  username            String             @unique
  name                String
  lastname            String?
  visibility          Int
  password            String
  profilePictureColor Int
  language            String
  workspaces          UserOnWorkspaces[]
  // workspaceSockets    UserSocketsOnWorkspaces[]
}

model UserOnWorkspaces {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId Int
  role        Int
}

// model UserSocketsOnWorkspaces {
//   id           Int       @id @default(autoincrement())
//   user         User?     @relation(fields: [userId], references: [id])
//   userId       Int?
//   workspace    Workspace @relation(fields: [workspaceId], references: [id])
//   workspaceId  Int
//   randomNameId Int?
//   socketId     String
// }

model Workspace {
  id              Int                @id @default(autoincrement())
  createdAt       DateTime           @default(now())
  name            String
  description     String?            @db.LongText
  directories     Directory[]
  users           UserOnWorkspaces[]
  visibility      Int
  InvitationCodes InvitationCodes[]
  // userSockets     UserSocketsOnWorkspaces[]
}

model Directory {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  name        String
  description String?   @db.LongText
  parent      Workspace @relation(fields: [parentId], references: [id])
  parentId    Int
  deleted     Boolean
  // data        Data[]
}

model InvitationCodes {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId Int
  code        String
}

model Events {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  type        Int
  row         Int
  actionType  Int
  workspaceId Int?
  userId      Int
  name        String?
  value       String?  @db.LongText
}
